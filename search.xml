<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2019新北市國際資訊奧林匹亞研習營初選資格選拔</title>
    <url>/2019/01/24/2019%E6%96%B0%E5%8C%97%E5%B8%82%E5%9C%8B%E9%9A%9B%E8%B3%87%E8%A8%8A%E5%A5%A7%E6%9E%97%E5%8C%B9%E4%BA%9E%E7%A0%94%E7%BF%92%E7%87%9F%E5%88%9D%E9%81%B8%E8%B3%87%E6%A0%BC%E9%81%B8%E6%8B%94/</url>
    <content><![CDATA[<p>來寫個心得～ （不算長文（？而且很流水帳喔&gt;&lt;<br>2019資奧TOI初選前熱身營隊（？</p>
<h3 id="Day1-1-21"><a href="#Day1-1-21" class="headerlink" title="Day1(1/21)"></a>Day1(1/21)</h3><p>因為是第一天報到，所以試著早起（5 點喔<br>來到了板中，開始上課時發現我沒吃早餐…..可悲<br>第一天只教DP但也是顛覆我人生的第 一次聽到如此動人又詳盡的DP，才開 始發現我以前原來跟DP很不熟。<br>然後很順利的跟坐附近的同學們聊得很來（？<br>還有一個保送科大，電m(_ _)m<br>大部分都寫ZJ 的題目，而且很多是蝸牛老師出的，感到有一種循序漸進～&gt;&lt;<br>回家坐在椅子上直接睡著，耶～習題沒寫完</p>
<h3 id="進入Day2-1-22"><a href="#進入Day2-1-22" class="headerlink" title="進入Day2(1/22)"></a>進入Day2(1/22)</h3><p>早上四點起床發現沒寫習題，開拼～<br>不知不覺5:30了，差一點錯過第一班公車<br>然後，到了板橋車站附近我居然記得吃早餐ww<br>小抱怨，快上課了警衛才記得把樓下鐵捲門打開QAQ<br>第二天教的是簡單的資料結構、前中後序轉換、DFS、BFS，也是邊刷題邊上課<br>然後神奇的鄰座學長是樹大神，解惑了些許對於樹的疑惑~(聽說高職專學樹(?羨慕)<br>回家亦然倒頭就睡</p>
<h3 id="差點遲到的Day3-1-23"><a href="#差點遲到的Day3-1-23" class="headerlink" title="差點遲到的Day3(1/23)"></a>差點遲到的Day3(1/23)</h3><p>居然睡過頭了QQ但趕上了第三班6:00的公車，因此來不及用電腦裡的頭貼為昨天要選拔賽的我送上祝福(?<br>據說這選拔賽的全名是2019新北市國際資訊奧林匹亞研習營初選資格選拔(?<br>差10分鐘遲到，匆匆忙忙得趕上後聽說今天教圖論&amp;二分<br>再來驚喜的是親眼遇見大神們陳威翰和蘇柏瑄(架CMS辛苦了&gt;&lt;)<br>題目有5題</p>
<hr>
<p>PA:單純的stack&amp;queue(100%)</p>
<p>PB:題目包裝得很漂亮，拆開來是我曾經精神AC卻沒實做過的LCS(100%)</p>
<p>PC:想了想，原本想說跟TIOJ 的Comiket一樣左加1，(右+1)減1 直接掃過去，但紙張上畫一畫發現會爛掉(? 所以突發奇想想起今天教了binary search，所以我就開了pair反過來二分搜，結過記憶體爛掉(27%)</p>
<p>PD:給一張格子圖，求某位置通過一些點到達目的的最短總長。(0%)</p>
<p>PE:並查集(精神100%)</p>
<p>過程:<br>前14分鐘寫完PA，由於精神不濟刻出來的code，讓我自己為了寫成2個stack就耍向de了許久，精神恢復了(100get)，發現PB敘述好長，大約看了一下就跳去看PC了，如上述PC的題目敘述一般，我埋頭苦幹了直到剩不到1小時，算了(27get)，趕快看PB &amp; PE，恩……PB看了看，這規律有一種既是感，LCS!(100get) 但剩下的十分鐘，就算知道PE是裸裸的disjoint set，我也無可奈何的沒完成~總計227/500，頗糟的，比預期的低100分QAQ</p>
<hr>
<p>題目:<a href="https://drive.google.com/open%E2%80%A6">https://drive.google.com/open…</a></p>
<hr>
<p>· 第8名，加油<del>少年!!!<br>· 成功進入複選資格</del><br>· 板中包了前5名……NDDWFF(QAQ)<br>· 我IOI CAMP 慘了……要請掉兩天去複選進階班培訓<br>· 初階結束了，資料夾、隨身碟、蝸牛老師的講義&amp;一堆巧顆力GET~!!!</p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>新北市TOI</tag>
        <tag>2019</tag>
      </tags>
  </entry>
  <entry>
    <title>TOPC 2020 比賽心得</title>
    <url>/2020/10/29/2020%20TOPC%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h1 id="2020-TOPC-心得"><a href="#2020-TOPC-心得" class="headerlink" title="2020 TOPC 心得"></a>2020 TOPC 心得</h1><p>比賽時間：2020/10/07 18:00~21:00</p>
<h2 id="題目：url"><a href="#題目：url" class="headerlink" title="題目：url"></a>題目：<a href="https://drive.google.com/drive/folders/1ikFKK3SGxzTAaWQKvkGr0NVSaBqL4T7c"><strong>url</strong></a></h2><p>雖然算是遲到的心得，但我還是得紀錄一下 OwO<br>隊友: <a href="https://blog.jw910731.wtf/">吳文元</a> 余原齊</p>
<h2 id="小抱怨"><a href="#小抱怨" class="headerlink" title="小抱怨"></a>小抱怨</h2><ul>
<li>理圖圖書館的印表機真的爛到炸 OAO</li>
<li>我超爛，SAD</li>
<li>OJ可能是在金費之下的受害者，但真正受害者的是我們比賽的人 -&gt; 一題可以給我judging快20分鐘。Orz</li>
<li>沒有penalty。</li>
<li>上述兩點加起來根本就是今年比賽的主打，SAD<h2 id="過程"><a href="#過程" class="headerlink" title="過程"></a>過程</h2>pI是簽到題，bj4<br>pA在某種程度下也是簽到題，因為只要先回到(0,0)，在按照題目輸出即可。<br>之後我根原齊在某種奇怪的量子糾纏之下一人一半把pB給AC了(他寫上半部(fold)，我寫下半部(overlapping condition)) -&gt; 過程中我把condition寫成了噁心的巢狀結構，然後因為了1個變數忘了修改而debug了幾百年(拖時間大師is me)。<h3 id="以下是沒解開的"><a href="#以下是沒解開的" class="headerlink" title="以下是沒解開的"></a>以下是沒解開的</h3>pC 我們想不到<strong>多點同速率擴張圓</strong>的最寫法，文元原本想要寫最近點對，但沒以實做的想法。<br>pD 是聽了學長的解後才恍然大悟的數學幾何題。<br>pG 我以為是貪婪加二分圖，之後以為是匹配，但之後看了fb上大老們的心得文後才知道這題是<strong>二分圖最大點獨立集</strong>。<br>pEFHJ 我都沒看QQ<h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2>名次：52/146<br>整場打下來配合度雨默契有比上次NCPC還要好，但我們的實力與刷題量皆不足，我們事後也有分配我們的合作模式與個人專項(擅長的算法)衝刺。<br>雖然以為沒有進ICPC而感到失望，但幾天後的遞補信又讓我重拾了鬥志與信心<br>ICPC Taipei on Site 加油吧～</li>
</ul>
<p><img src="https://i.imgur.com/WNIq9bK.jpg"></p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>TOPC</tag>
        <tag>2020</tag>
      </tags>
  </entry>
  <entry>
    <title>TIOJ 1152 銀河帝國旅行社</title>
    <url>/2019/02/22/TIOJ%201152%20%E9%8A%80%E6%B2%B3%E5%B8%9D%E5%9C%8B%EF%A6%83%EF%A8%88%E7%A4%BE/</url>
    <content><![CDATA[<p>題目連結:<a href="https://tioj.ck.tp.edu.tw/problems/1152">https://tioj.ck.tp.edu.tw/problems/1152</a></p>
<p>“樹直徑”定義:一顆樹上任兩點距離最大<br>這是一題裸裸的樹直徑題，不難發現dfs一次找到最遠點，再用那個點當作第二次dfs的根，再找一次最遠點，不外乎就是樹直徑(很greedy的想法(?)。</p>
<p>PS:我的code超爛，ranklist超後面QAQ</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(<span class="meta-string">&quot;O2&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> jizz ios_base::sync_with_stdio(false),cin.tie(NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> po pop_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CN cout&lt;&lt;<span class="meta-string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson int lson=index*2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson int rson=index*2+1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mid int mid=(l+r)/2</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v[<span class="number">10005</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">10005</span>],ans_p=<span class="number">0</span>,ans_s=<span class="number">0</span>,root;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fill(vis,vis+n,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:v[now])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[x]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[x]=<span class="number">1</span>;</span><br><span class="line">            dfs(x,sum+<span class="number">1</span>);   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum&gt;ans_s)</span><br><span class="line">    &#123;</span><br><span class="line">        ans_p=now;</span><br><span class="line">        ans_s=sum;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; ans_s &lt;&lt;&quot; &quot; &lt;&lt; ans_p &lt;&lt;&quot;\n&quot;;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jizz;</span><br><span class="line">    <span class="keyword">int</span> n,a;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    init(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; a &amp;&amp; a!=<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            v[i].pb(a);</span><br><span class="line">            v[a].pb(i);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">int</span> root=<span class="number">0</span>;</span><br><span class="line">    vis[root]=<span class="number">1</span>;</span><br><span class="line">    dfs(root,<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//cout &lt;&lt;&quot;s=&quot;&lt;&lt; ans_s &lt;&lt;&quot; p=&quot; &lt;&lt; ans_p &lt;&lt;&quot;\n&quot;;</span></span><br><span class="line">    init(n);</span><br><span class="line">    dfs(ans_p,<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans_s &lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>演算法</category>
      </categories>
      <tags>
        <tag>TIOJ</tag>
        <tag>樹直徑</tag>
      </tags>
  </entry>
  <entry>
    <title>NCPC 初賽 2020心得</title>
    <url>/2020/09/27/2020%20NCPC%E5%88%9D%E8%B3%BD%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<p>難得這次我有賽中把題目看完</p>
<hr>
<h2 id="以下題敘"><a href="#以下題敘" class="headerlink" title="以下題敘"></a>以下題敘</h2><p>PA : r=qx+py，給正整數r,p,q，求|x|+|y|最小 (r&lt;pq &amp; r&lt;10^9 assume that 1&lt;p,q&lt;10^9)</p>
<p>PB : 奇數魔方陣。給定第一列數字，把整個大小n^2的魔方陣求出。(魔方陣：每行、列、主副對角線個別和相等) (n&lt;=5 &amp; n is odd)</p>
<p>PC : 給一棵帶邊權的樹，n個節點，修改q次邊權Wij，求出每次修改後最遠的兩點。(n&lt;=1500 &amp; q&lt;=20 &amp;&amp; &lt;=10筆測資 &amp;&amp; W&lt;=10000)</p>
<p>PD : 有一個以大寫字母組成長度&lt;10^4的字串，以星號(*)結尾。總共有兩次的變動，第一次為「將最後一個字母丟到第一個，重複n-1次」，第二次為「將原字串與n-1個字串以字典序排序」，然後依序取每個字串的最後一個字母。<br>現在給定一字串為「每個字串的最後一個字母」，請推出原字串為何。</p>
<p>PE : 給定一個大小為n^2陣列L，n&lt;1000，L[i][j]表示i與j相鄰的距離(L[1][2]=1 L[1][3]=2 L[2][3]雖然可以間接走到，但沒有相鄰因此為無限大)，題序為全點對最短情況下modify一邊權後響多少點對被變更(變更使得維持全點對最短)(0&lt;邊權&lt;2^32)</p>
<p>PF : 給m,n表示1~m中任意數量數字和=n，有全部列出，無則輸出-1 (m&lt;=n &amp; 8&lt;=n&lt;=30 &amp; 共10筆測資)</p>
<p>PG : 給定d[0][0]，用下面圖片那串建一個(N-1)*(M-1)的table，給A,B,L取max(左上d[A][B]與右下d[A+L-1][B+L-1]的矩形範圍內相鄰差)</p>
<h2 id="今日總過程"><a href="#今日總過程" class="headerlink" title="今日總過程"></a>今日總過程</h2><p><a href="https://theriseofdavid.github.io/">江大衞</a> 昨天半夜來我家吃宵夜、改Codebook，還有互相打氣(?<br>隔天10點快半跟原齊、文元會合吃早(午)餐，然後買了電瓶-&gt;(茶)<br>進考場後說甚麼不能動電腦跟鍵盤，欸欸，都已經12:43了，剩17分鐘就要考了，說好的30分鐘測機呢？其他組去問都沒有用，然後我就上前去跟考官抗議，嗆到他一句回不出時他就摸摸鼻子去跟隔壁間考官說上台宣布開始測機(只剩15分鐘)。<br>宣布時有說到有提供印表機，但途中印表機卡紙(問題真多啊= = )<br>我快速的把全部題目看過，PF文元跟原齊正在解，我發現PD是前年新北市賽那題(「外星人的訊息」，解法我記得是BWT(Burrows–Wheeler Transform))，但我當年沒好好研究這算法(抓到，當年我喇部份分。子權你再不好好訂正啊!)，只好憑印象跟隊友說解法(因為事先說好我這次不會上機(怕我毒瘤code))。<br>快2小時過去，PF WA了兩次AC了，「中間時段」原齊也有把PD刻好了，<br>「中間時段」為-&gt;討論PD跟PC的解法，PC這題我跟文元說是樹直徑，但他說這題帶權重，我不好好的證明就放棄了這個念頭(如果我的實力好一點而且會在場上細心證明的話這題就AC了)。然後文元覺得是樹鏈剖分套BIT拉出每一條，雖然聽起來合理，但後來看Scoreboard得知很多人AC，發覺這題應該沒那麼毒瘤。<br>原齊把PD上傳後吃了WA，後來手動列出很多比測資都還是不知道哪裡假解<br>而PE跟PG我覺得很勞動而且PG的多次查詢範圍相臨差最大想不到優質的解法，所以都skip<br>PB跟PA也想不到好的解法，於是整場大燒機!!~~</p>
<h3 id="比賽結束"><a href="#比賽結束" class="headerlink" title="(比賽結束)"></a>(比賽結束)</h3><hr>
<h2 id="想法與心得"><a href="#想法與心得" class="headerlink" title="想法與心得"></a>想法與心得</h2><p>賽後我直接問 江文吉 PC怎麼AC的，他的隊友跟我說是樹直徑。<br>文元認為整個團隊還沒配合的很好，原齊跟我認為是實力不夠導致PA想不到是「擴展歐幾里得」(而且也不知道這是什麼)，還有PC沒法好好證明帶邊權樹直徑DFS兩次的正確性，後來文元很直白跟我說我都在吃老本、沒在動腦，看到題目就會翻以前解過哪些相似的並困在那思路中，更何況題目都會變化。<br>但我認為我還是得好好地刷題，刺激不同且新的思路還有把想法轉為code並穩定輸出，原齊則想往快速開題還有數論發展。</p>
<h2 id="個人感想"><a href="#個人感想" class="headerlink" title="個人感想"></a>個人感想</h2><p>由於高中時期我幾乎是一人獨來獨往，組隊是用湊人頭的，很少有多次合作並賽後檢討的機會，更何況我都不知道我的「團隊配合」與「解題思路」有這麼多需要改進(真的直到文元指出我才知道)，這次多人正式賽真的學到了不少，希望兩位能繼續收留我QAQ</p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>2020</tag>
        <tag>NCPC</tag>
      </tags>
  </entry>
  <entry>
    <title>TIOJ 1312 家族</title>
    <url>/2018/12/19/TIOJ%201312%20%E5%AE%B6%E6%97%8F/</url>
    <content><![CDATA[<p>雖然有一點煩(連續輸入我看漏了)，但只是裸裸的dsu題(模板+1/0)<br>據說我是題目連結(?  <a href="https://tioj.ck.tp.edu.tw/problems/1312">https://tioj.ck.tp.edu.tw/problems/1312</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> gcc optimize(<span class="meta-string">&quot;o2&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long int </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IOS ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TO cin.tie(NULL)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">disjointset</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> mem[<span class="number">10005</span>],rank[<span class="number">10005</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=num;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            mem[i]=i;</span><br><span class="line">            rank[i]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mem[N]==N) <span class="keyword">return</span> N;</span><br><span class="line">        <span class="keyword">return</span> mem[N]=find(mem[N]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> find(a)==find(b);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!same(l,r))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(find(l)&lt;find(r)) swap(l,r);</span><br><span class="line">            mem[find(l)]=find(r);</span><br><span class="line">            rank[find(l)]+=find(r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IOS;TO;</span><br><span class="line">    <span class="keyword">int</span> n,m,a,b,k;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">disjointset</span> <span class="title">dsu</span>;</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        dsu.init(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">            dsu.Union(a,b);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; k;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; dsu.find(k) &lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>演算法</category>
      </categories>
      <tags>
        <tag>TIOJ</tag>
        <tag>並查集</tag>
      </tags>
  </entry>
  <entry>
    <title>ICPC模擬賽 2015 ICPC Singapore Clone</title>
    <url>/2020/11/06/%5BICPC%E6%A8%A1%E6%93%AC%E8%B3%BD%5D%202015%20ICPC%20Singapore%20Clone/</url>
    <content><![CDATA[<h1 id="校內-ICPC-模擬賽-心得"><a href="#校內-ICPC-模擬賽-心得" class="headerlink" title="校內 ICPC 模擬賽 心得"></a>校內 ICPC 模擬賽 心得</h1><h2 id="模擬賽題目：2015-ICPC-Singapore"><a href="#模擬賽題目：2015-ICPC-Singapore" class="headerlink" title="模擬賽題目：2015 ICPC Singapore"></a>模擬賽題目：2015 ICPC Singapore</h2><p>連結：<a href="https://open.kattis.com/contests/niih2v">https://open.kattis.com/contests/niih2v</a></p>
<p><strong>之前的我們：我們打競程打健康的。</strong><br><strong>現在的我們：為了出國一起捨棄GPA OwO</strong></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>天使宗哲設錯日期，設到明天晚上，調整後延後10分鐘考www<br>比賽時間：2020/11/05 18:10~23:10</p>
<p>開頭小差曲：我們到了一間不是電腦教室的地方上機，原齊想用vim，文元想用sublime，但我的筆電只有vim，所以比賽開始後文元現場直接裝，sad。</p>
<p>一開場我先看pC，第一次知道ICPC的題敘超可怕的長，裡面的劇情用詞超強的 &lt;- (這不是重點XD)</p>
<p>pC: n表示接下來有n個食譜，每個食譜有m個數字表示combine在一起，<strong>必定</strong>由上往下的食譜進行合併，合併過後的數字不能單獨跟他沒有合併過的合併，然後合併的條件是</p>
<ol>
<li>合併過不得單獨跟沒合併過的合併</li>
<li>合併過的可以<strong>一起</strong>跟沒有合併過的合併</li>
<li>呈2，或是可以一起跟合併過的一起合併</li>
</ol>
<p>看完後跟文元(SAD)、原齊說我的想法，我們同時表示：「裸的DSU啊！」，然後交給DSU刻超快的SAD刻。</p>
<p>中間小插曲：文元突然轉不過來第3點怎麼刻，我就說：沒做過的砍掉，每一個dsu的size總和一定會等於剩下的。C就這樣被首殺掉了。</p>
<p>然後我看pE，看到一半後被抓去想pI，就三種字母，給分別三種的數量，將其排列但相同字母的不能相鄰，我想了一下，資芽算法班貌似在DP那章有紅藍綠著色問題，但我又忘了怎麼轉移，現場推我腦袋燒雞，交給原齊後他也宣告放棄，於是就跟他們說pE想法。</p>
<p>我只說了一半(誰叫我只看一半ㄎㄎ)，順便他們跟我解釋pF，後來發現pE完全就是模擬題(模擬比賽算penalty)(而且一堆人AC了)，他們趕緊刻完AC後交給我寫pF。</p>
<p>pF: 每隻細菌都有自己適合的[U,L]，表示溫度範圍，然候有n隻細菌，每個保溫箱有固定的溫度，求最少需要多少保溫箱。</p>
<p>其實pF沒有很難，但一開始原齊想法錯了導致送上去兩次WA，後來他製造了奇怪的測資把自己的想法ban掉OwO，我就重刻。由於我沒有好好維護while導致某些比較大的測資會infinite loop，我又WA了兩次，而且我的code超級不clean，於是原齊打算重刻，果然刻完送上去AC了。</p>
<p>這讓我想起打R6時天兆常跟我說：「不會玩女鬼就不要玩; 不會玩大盾就不要玩！」我現在想：「不會刻while就……好好維護啊！然後code乾淨一點！」(我真是欠譴責OwO)</p>
<p>後來我們pG想不出最優解，原本想說是greedy，但文元說dp才對，可是沒想法。<br>pG題序如下：<br>有一個stack，裡面有一排數字，逐一取出分堆。<br>分堆定義：</p>
<ol>
<li>取出後可以加起前一個並組成一堆</li>
<li>依序以左至右的每堆數量必須為非嚴格遞增</li>
<li>呈1.取出後可以選擇併入前一堆，或是自立一堆<br>題目所求：最多分幾堆</li>
</ol>
<p>最後我們21:45就先離場了，總共打了3hr35m。</p>
<p>總之，ICPC加油啦！我會好好練 clean code的 QAQ</p>
<p><img src="https://i.imgur.com/lMG2pH2.jpg"></p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>2020</tag>
        <tag>模擬賽</tag>
      </tags>
  </entry>
  <entry>
    <title>SOJ 41 大顆壽司</title>
    <url>/2018/08/16/%5BSOJ%5D%2041%20%E5%A4%A7%E9%A1%86%E5%A3%BD%E5%8F%B8/</url>
    <content><![CDATA[<p>題目URL:<a href="https://pc2.tfcis.org/dev/index.php/problem/view/41/">https://pc2.tfcis.org/dev/index.php/problem/view/41/</a><br>來到了清大的營隊，回顧一下最短路徑的裸題~<br>debug到死才發現我是垃圾~(因為我忘了把adj clear掉)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(<span class="meta-string">&quot;O2&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> weight first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> index second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IOS ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TI cin.tie(NULL)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">using</span> edge=<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"><span class="keyword">int</span> vnum,dist[<span class="number">400005</span>];</span><br><span class="line"><span class="keyword">int</span> num,M,st,t,a,b,w;</span><br><span class="line"><span class="built_in">vector</span>&lt;edge&gt; adj[<span class="number">400005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">bool</span>&gt; <span class="title">vis</span><span class="params">(vnum,<span class="literal">false</span>)</span></span>;</span><br><span class="line">    fill(dist,dist+vnum+<span class="number">5</span>,INF);</span><br><span class="line">    dist[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">priority_queue</span>&lt;edge,<span class="built_in">vector</span>&lt;edge&gt;,greater&lt;edge&gt;&gt; pq;</span><br><span class="line">    pq.emplace(<span class="number">0</span>,s);</span><br><span class="line">    <span class="keyword">while</span>(!pq.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> u=pq.top().index;</span><br><span class="line">        pq.pop();</span><br><span class="line">        <span class="keyword">if</span>(vis[u]) <span class="keyword">continue</span>;</span><br><span class="line">        vis[u]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> v:adj[u])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(dist[v.index] &gt; dist[u]+v.weight)</span><br><span class="line">            &#123;</span><br><span class="line">                dist[v.index]=dist[u]+v.weight;</span><br><span class="line">                pq.emplace(dist[v.index],v.index);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//for(int i=1;i&lt;=vnum;i++)</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; &quot;dist[&quot; &lt;&lt; i  &lt;&lt; &quot;]&quot; &lt;&lt; dist[i] &lt;&lt;endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IOS;TI;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;num;k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; vnum &gt;&gt; M &gt;&gt; st &gt;&gt; t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;M;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; w;</span><br><span class="line">            adj[a].emplace_back(w,b);<span class="comment">//a to b</span></span><br><span class="line">            adj[b].emplace_back(w,a);<span class="comment">//b to a</span></span><br><span class="line">        &#125;</span><br><span class="line">        dijkstra(st);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; dist[t] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=vnum;i++)</span><br><span class="line">            adj[i].clear();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>演算法</category>
      </categories>
      <tags>
        <tag>SOJ</tag>
        <tag>djijkstra</tag>
        <tag>最短路徑</tag>
      </tags>
  </entry>
  <entry>
    <title>NTHU 10322 PC 費式數列與矩陣快速冪</title>
    <url>/2019/02/21/%5BNTHU%5D10322%20PC%20%E8%B2%BB%E5%BC%8F%E6%95%B8%E5%88%97%E8%88%87%E7%9F%A9%E9%99%A3%E5%BF%AB%E9%80%9F%E5%86%AA/</url>
    <content><![CDATA[<p>題目連結:<a href="https://acm.cs.nthu.edu.tw/problem/10322/">https://acm.cs.nthu.edu.tw/problem/10322/</a></p>
<p>一題矩陣快速冪裸題(題目就表明(?)</p>
<p>當然是好好地把矩陣的乘法定義定好，注意一些0/1擺放的細節，把其套上快速冪的模板，就大功告成了。&gt;&lt;</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(<span class="meta-string">&quot;O2&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> jizz ios_base::sync_with_stdio(false) , cin.tie(NULL) , cout.tie(NULL);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> po pop_back;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CN cout&lt;&lt;<span class="meta-string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m 100000007</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">array</span>&lt;<span class="built_in">array</span>&lt;<span class="keyword">int</span>,2&gt;,2&gt; Matrix;</span><br><span class="line">Matrix <span class="keyword">operator</span>*(Matrix A , Matrix B)</span><br><span class="line">&#123;</span><br><span class="line">    Matrix C;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">2</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            C[i][j]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">2</span>;k++)</span><br><span class="line">                C[i][j]=(C[i][j]%m+(A[i][k]%m*B[k][j]%m)%m)%m;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Matrix <span class="title">power</span><span class="params">(Matrix A,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Matrix ans=&#123;&#123;&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;&#125;&#125;;</span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">            ans=ans*A;</span><br><span class="line">        n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        A=A*A;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    jizz;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; num || num==<span class="number">0</span>)</span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span> &lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(num==<span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Matrix A=&#123;&#123;&#123;<span class="number">1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;&#125;&#125;;</span><br><span class="line">            Matrix C=power(A,num<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; C[<span class="number">0</span>][<span class="number">0</span>] &lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>演算法</category>
      </categories>
      <tags>
        <tag>NTHU</tag>
        <tag>矩陣快速冪</tag>
        <tag>數論</tag>
      </tags>
  </entry>
  <entry>
    <title>SOJ 43 Lacy 路網</title>
    <url>/2018/08/16/%5BSOJ%5D%2043%20Lacy%20%E8%B7%AF%E7%B6%B2/</url>
    <content><![CDATA[<p>題目URL:<a href="https://pc2.tfcis.org/dev/index.php/problem/view/43/">https://pc2.tfcis.org/dev/index.php/problem/view/43/</a></p>
<p>MST的裸題，簡單來說只要把operator的比較換一下，就變最大生成樹了，然後順便善用dsu並且小複習。(清大營隊進修ing)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC osptimize(<span class="meta-string">&quot;O2&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IOS ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TI cin.tie(NULL)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MI=<span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> num,a,b,w;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> from,to,weight;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (edge &amp;a,edge &amp;b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a.weight &gt; b.weight;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;edge&gt; v;</span><br><span class="line"><span class="keyword">int</span> vnum,vedge;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">disjointset</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> f[MI],rank[MI];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> N)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=N;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i]=i;</span><br><span class="line">            rank[i]=<span class="number">0</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(f[val]==val) <span class="keyword">return</span> val;</span><br><span class="line">        <span class="keyword">return</span> f[val]=find(f[val]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">same</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> find(a)==find(b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!same(l,r))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(rank[l]&lt;rank[r]) swap(l,r);</span><br><span class="line">            f[f[r]]=f[l];</span><br><span class="line">            rank[l]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kruskal</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sort(v.begin(),v.end());</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">disjointset</span> <span class="title">dsu</span>;</span></span><br><span class="line">    dsu.init(vnum);</span><br><span class="line">    <span class="keyword">int</span> total=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,cou=<span class="number">0</span>; i&lt;vedge &amp;&amp; cou&lt;vnum ;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x=v[i].from,y=v[i].to;</span><br><span class="line">        <span class="comment">//cout &lt;&lt; &quot;x=&quot; &lt;&lt;x &lt;&lt; &quot;y=&quot; &lt;&lt; y &lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(!dsu.same(x,y))</span><br><span class="line">        &#123;  </span><br><span class="line">            total+=v[i].weight;</span><br><span class="line">            cou++;</span><br><span class="line">            dsu.Union(x,y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout &lt;&lt;&quot;total=&quot;&lt;&lt;total &lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line">    IOS;TI;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">    <span class="keyword">while</span>(num--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; vnum &gt;&gt; vedge;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">edge</span> <span class="title">cpy</span>;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vedge;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; w;</span><br><span class="line">            cpy.from=a;</span><br><span class="line">            cpy.to=b;</span><br><span class="line">            cpy.weight=w;</span><br><span class="line">            v.push_back(cpy);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=kruskal();</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span>(!v.empty())</span><br><span class="line">        v.pop_back();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>演算法</category>
      </categories>
      <tags>
        <tag>並查集</tag>
        <tag>SOJ</tag>
        <tag>MST</tag>
      </tags>
  </entry>
  <entry>
    <title>Sprout OJ RMQ練習</title>
    <url>/2018/12/26/%5BSprout%20OJ%5D%20No.80%20RMQ%E7%B7%B4%E7%BF%92/</url>
    <content><![CDATA[<p>題目來源:<a href="https://neoj.sprout.tw/problem/80/">https://neoj.sprout.tw/problem/80/</a><br>參考: <a href="https://slides.com/sylveon/2017wds#/2">https://slides.com/sylveon/2017wds#/2</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize (<span class="meta-string">&quot;O2&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//#define int long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> jizz ios_base::sync_with_stdio(false),cin.tie(NULL)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> id1(X) (X)*2+1 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> id2(X) (X)*2+2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max_n 1000000</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> str[max_n+<span class="number">5</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> val;	</span><br><span class="line">&#125;seg[<span class="number">4</span>*max_n+<span class="number">5</span>];</span><br><span class="line"><span class="function">node <span class="title">pull</span><span class="params">(<span class="keyword">const</span> node &amp;x, <span class="keyword">const</span> node &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	node tmp;</span><br><span class="line">	tmp.val=min(x.val, y.val);</span><br><span class="line">	<span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r, <span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">	<span class="keyword">if</span>(l==r) </span><br><span class="line">	&#123;</span><br><span class="line">		seg[id].val=str[l];</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> m=(l+r)/<span class="number">2</span>;</span><br><span class="line">	build(l,m,id1(id));</span><br><span class="line">	build(m+<span class="number">1</span>,r,id2(id));</span><br><span class="line">	seg[id]=pull(seg[id1(id)],seg[id2(id)]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">node <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; &quot; &quot; &lt;&lt; L &lt;&lt; &quot; &quot; &lt;&lt; R &lt;&lt; &quot; &quot; &lt;&lt; id &lt;&lt;&quot;\n&quot;;</span></span><br><span class="line">	<span class="keyword">if</span>(l==L &amp;&amp; r==R) <span class="keyword">return</span> seg[id];</span><br><span class="line">	<span class="keyword">int</span> M=(L+R)/<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">if</span>(r&lt;=M) <span class="keyword">return</span> query(l,r,L,M,id1(id));</span><br><span class="line">	<span class="keyword">if</span>(M&lt;l) <span class="keyword">return</span> query(l,r,M+<span class="number">1</span>,R,id2(id));</span><br><span class="line">	<span class="keyword">return</span> pull(</span><br><span class="line">		query(l,M,L,M,id1(id)),</span><br><span class="line">		query(M+<span class="number">1</span>,r,M+<span class="number">1</span>,R,id2(id))</span><br><span class="line">	);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> v, <span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(L==R)</span><br><span class="line">	&#123;</span><br><span class="line">		seg[id].val=v;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> M=(L+R)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(i&lt;=M) modify(i,v,L,M,id1(id));</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(i&gt;M) modify(i,v,M+<span class="number">1</span>,R,id2(id));</span><br><span class="line">	&#125;</span><br><span class="line">	seg[id]=pull(seg[id1(id)],seg[id2(id)]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	jizz;</span><br><span class="line">	<span class="keyword">int</span> T,N,de,x,y;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; T &gt;&gt; N;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;N;i++) <span class="built_in">cin</span> &gt;&gt; str[i];</span><br><span class="line">	build(<span class="number">0</span>,N<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">while</span>(T--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; de &gt;&gt; x &gt;&gt; y;</span><br><span class="line">		<span class="keyword">if</span>(de&amp;<span class="number">1</span>) <span class="built_in">cout</span> &lt;&lt; query(x,y,<span class="number">0</span>,N<span class="number">-1</span>,<span class="number">0</span>).val &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">		<span class="keyword">else</span> modify(x,y,<span class="number">0</span>,N<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>資料結構</category>
      </categories>
      <tags>
        <tag>SPOJ</tag>
        <tag>線段樹</tag>
      </tags>
  </entry>
  <entry>
    <title>TIOJ 1410. Comiket</title>
    <url>/2018/12/22/%5BTIOJ%5D%201410.%20Comiket/</url>
    <content><![CDATA[<p>題目來源：<a href="https://tioj.ck.tp.edu.tw/problems/1410">https://tioj.ck.tp.edu.tw/problems/1410</a><br>我的想法很直觀，就是用array儲存入和出的人(記得出的時間點也算，所以要加1)，然後掃過去紀錄時間軸的max值。</p>
<p>PS:我最後發現我這樣寫不管是時間上還是空間上都很爛，所以我去看了幾位大神的寫法才發現這題可以用離散化或是用map揍掉 m(_ _)m</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> gcc optimize(o2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long int </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IOS ios_base::sync_with_stdio(false)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TO cin.tie(NULL)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> str[<span class="number">100005</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IOS;TO;</span><br><span class="line">    <span class="keyword">int</span> range=<span class="number">0</span>,a,b,n,maxu,ans;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=<span class="number">0</span>;maxu=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">            str[a]++;</span><br><span class="line">            b+=<span class="number">1</span>;</span><br><span class="line">            str[b]--;</span><br><span class="line">            range=max(range,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=range;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            maxu+=str[i];</span><br><span class="line">            ans=max(maxu,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>演算法</category>
      </categories>
      <tags>
        <tag>TIOJ</tag>
        <tag>時間標記</tag>
        <tag>前綴和</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Hexo架出第一個Blog</title>
    <url>/2020/10/11/%E5%88%A9%E7%94%A8Hexo%E6%9E%B6%E5%87%BA%E7%AC%AC%E4%B8%80%E5%80%8BBlog/</url>
    <content><![CDATA[<p>我之前都是用google的Blogger，如今我想架出自由度高的Blog（<del>好啦，就是想要很油很宅的Blog啦</del>），於是就被我<a href="https://theriseofdavid.github.io/">學長</a>推坑用Hexo。</p>
<p><a href="https://hexo.io/zh-tw/">關於Hexo</a></p>
<h2 id="美中不足之處"><a href="#美中不足之處" class="headerlink" title="美中不足之處"></a>美中不足之處</h2><p>我用的themes是Diaspora(<del>一個很適合放很多油圖的themes</del>)，但是有些小缺陷如下：</p>
<ol>
<li>Markdown的<strong>語法行號</strong>和<strong>粗體字</strong>無法好好的顯示。</li>
<li>hitokoto(一言)需要手動去<code>diaspora.js</code>自行調整，首先要對javascript的string用法要熟悉。</li>
<li>如果是繁體字使用者，需要去很多地方改成繁體字-&gt; <code>themes/diaspora/layout/</code></li>
</ol>
<h3 id="解決方法如下"><a href="#解決方法如下" class="headerlink" title="解決方法如下"></a>解決方法如下</h3><ol>
<li><ul>
<li><strong>行號不出現的問題</strong> -&gt; 到 <code>source/css/diaspora.css</code> 裡把 <code>.content .gutter &#123;display:none;&#125;</code> 改成 <code>.content .gutter &#123;display:table;&#125;</code></li>
<li><strong>無法粗體字</strong>-&gt;<code>source/css/diaspora.css</code>裡把<code>.content strong &#123;font-weight:500;&#125;</code>刪掉。</li>
</ul>
</li>
<li><ul>
<li><strong>hitokoto</strong> -&gt; 直接去<code>source/js/diaspora.js</code>裡改他的string。</li>
</ul>
</li>
</ol>
<h2 id="有關Diaspora的套用"><a href="#有關Diaspora的套用" class="headerlink" title="有關Diaspora的套用"></a>有關Diaspora的套用</h2><p>相信我，沒有什麼比看原作的流程更詳細的。</p>
<p><a href="https://github.com/Fechin/hexo-theme-diaspora">Diaspora連結</a></p>
<h2 id="有關架網站的總過程"><a href="#有關架網站的總過程" class="headerlink" title="有關架網站的總過程"></a>有關架網站的總過程</h2><p>我大多是看這篇學的 -&gt; <a href="https://medium.com/@bebebobohaha/%E4%BD%BF%E7%94%A8-hexo-gitpage-%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA-blog-5c6ed52f23db">如何搭建個人 Blog 使用 Hexo + Gitpage</a></p>
<p>如果想把 <code>favicon</code> 跟 <code>logo</code> 換成自己的話，我個人是用<a href="http://www.akuziti.com/">這個網站</a>生成自己想要的字體圖檔，然後再去 <code>themes/diaspora/source/css/diaspora.css</code> 把 <code>.image-logo</code> 的px改成自己所需的，但理論上 <code>favicon</code> 64px就行了，logo則是要去css檔裡修改（看你的logo多長啦）。</p>
<p>還有，如果想在每一篇文章都放圖片的話，那就在<code>_posts</code>的<code>md</code>檔裡的<code>yaml</code>部份加上<code>cover: /img/....jpg</code></p>
<p>舉例：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">SOJ</span> <span class="number">43</span> <span class="string">Lacy</span> <span class="string">路網</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018-08-16 15:46:00</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">演算法</span></span><br><span class="line"><span class="attr">welcome_cover:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">/img/SOJ43.jpg</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">SOJ</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">MST</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">並查集</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<p>如果想要讓首頁圖片跟著分類一起片換的話（也就是當那篇文章是第一個時，以那一篇cover為當前封面）</p>
<p>那就把<code>themes/_config.yml</code>裡的<code>welcome_cover: .../</code>給註記掉<code>#welcome_cover: .../</code></p>
<p>另外，記得每個<code>md</code>的<code>yaml</code>的<code>title</code>部份，名字絕對不要有<code>[ ]</code>符號，不然會出錯。</p>
<h2 id="如何將你的-Hexo-Github-Pages"><a href="#如何將你的-Hexo-Github-Pages" class="headerlink" title="如何將你的 Hexo + Github Pages"></a>如何將你的 Hexo + Github Pages</h2><p>我是看這篇的。</p>
<p><a href="https://ed521.github.io/2019/07/hexo-install/">使用 GitHub Pages + Hexo 來架設個人部落格</a></p>
<p><strong>但切記：我犯了一個重大的錯誤，就是建repo時一定要<code>&lt;username&gt;.github.io</code>，我就是因為取錯repo的名字導致我的網站爛掉。</strong></p>
<h2 id="當你要npm-install-hexo-deployer-git-save時吃了Warning"><a href="#當你要npm-install-hexo-deployer-git-save時吃了Warning" class="headerlink" title="當你要npm install hexo-deployer-git --save時吃了Warning"></a>當你要<code>npm install hexo-deployer-git --save</code>時吃了Warning</h2><p>這篇一定可以幫助到你。</p>
<p><a href="https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/682735/">為什麼npminstall的時候會顯示嚴重漏洞</a></p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>2020</tag>
        <tag>Blog</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>大學面試總心得</title>
    <url>/2020/04/26/%E5%A4%A7%E5%AD%B8%E9%9D%A2%E8%A9%A6%E7%B8%BD%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<p><img src="https://i.imgur.com/IeHQ56h.jpg"></p>
<h2 id="交大資工-APCS組-面試-amp-心得-4-23"><a href="#交大資工-APCS組-面試-amp-心得-4-23" class="headerlink" title="交大資工(APCS組)(面試&amp;心得)(4/23)"></a>交大資工(APCS組)(面試&amp;心得)(4/23)</h2><p>這是我的備審<br>連結：<a href="https://drive.google.com/open?id=1v4fw_F4DYsee9jLfdwLjFZ5MW5tFjUOv">https://drive.google.com/open?id=1v4fw_F4DYsee9jLfdwLjFZ5MW5tFjUOv</a><br>備註我的學測成績(國11 數14 英14 自11)</p>
<p>由左到右ABC三個教授，B是主面試官，也是競賽指導的教授，C聽說是資安的教授。<br>自介1分鐘，但我介紹1分半。</p>
<hr>
<p>教授A ：你接觸演算法時所運用的讀書方法。</p>
<p>教授 B ：請說明在資訊之芽學習最深刻的演算法。</p>
<p>教授 B ：請說具體的題目。</p>
<p>教授 B ：那你覺得你不擅長的是什麼？</p>
<p>我        ：是指哪個方面的？</p>
<p>教授 B ：在資訊之芽時的演算法。</p>
<p>教授 C ：請說明一下你發現app store 的付費漏洞。</p>
<p>教授 B ：你是怎麼發現這個漏洞的？</p>
<p>教授 B ：你有打Codeforces喔？目前如何？</p>
<p>我         ：我綠人</p>
<p>教授 B ：為什麼這樣？</p>
<p>我         ：英文讀題比較慢，別人兩三分鐘一題，我要十幾分鐘</p>
<p>教授B  ：可是題目很短（？</p>
<p>我         ：我近期打的比賽是長的QAQ</p>
<p>教授 A ：考APCS有先做準備嗎？</p>
<p>回答完後七分鐘剛好到，被敲門了。</p>
<p>教授B  ：好，按右邊的按鈕開門</p>
<hr>
<p>嘛……教授A的第一題我回答到腦袋空掉，突然想起陳威達學長說的『不要太緊張，不然面試時腦袋會空白，然後就會覺得越來越可怕』，此時輪到教授B時我就回歸正常，後面都回答得蠻順的，但是有一點尬聊，因為每次回答完一個問題，就會安靜個十幾秒(因為教授們在翻備審找題目問我，面試後聽說其他人也有)。面完試後跟吳邦寧、韋詠祥(Sean)等人聊天吃飯。有被問家裡住所的 ; 有被電的，我好想被電啊，被電都會入取 &gt;&lt;。然後等客運時遇到一位媽媽帶女兒來面試，聊一聊發現她也是來交大資工APCS的面試，聽她媽說她是唯一女的(? 為啥我去哪面試都會遇到女的OAO</p>
<hr>
<p>5/1附記：備取13 QAQ</p>
<hr>
<h2 id="臺師大-APCS組-面試-4-26"><a href="#臺師大-APCS組-面試-4-26" class="headerlink" title="臺師大 (APCS組)(面試)(4/26)"></a>臺師大 (APCS組)(面試)(4/26)</h2><p>這是我的備審<br>連結：<a href="https://drive.google.com/open?id=1B2Zi7ft8KcVla44UyAdwnZb82z55tMKt">https://drive.google.com/open?id=1B2Zi7ft8KcVla44UyAdwnZb82z55tMKt</a><br>備註我的學測成績(國11 數14 英14 自11)</p>
<p>因為臺師大校園內疫情的關係，所以改為不面試並調整分數的比例<br>(學測：45%，書審：25%，APCS：30%)</p>
<p>至於面試的部分，以下我會放面試前我跟108學年有參加臺師大資工(APCS組)的學長姐請教的問題與回答。</p>
<p>這是我給學長姐們的問題：<br>       你好，我是來自新北市時雨高中的蘇子權，懇請讓我借用你一些時間問一些關於臺師大APCS口試的準備指引。<br>       我希望能透過你了解一些面試時的「注意狀況與細節」和「問題導向」，因為我不確定口試時是會問關於「備審的內容」還是「演算法的問題」還是「單純像一些大學的資工乙組的聊聊天，用學測與在校成績評斷」（我認為應該不會是後者）。<br>       我們學校的老師一直說前面的大學注重的是課業（我的老師認為簡章上只是形式上寫寫的）。<br>       我的學測成績不好、數學也只有14、在校成績也不是很好，只有資訊競賽跟相關活動比較豐富（可是我資奧也不是打得很好），因此我想請教一下大致上口試的狀況，並且設法在口試時翻身。非常的謝謝你。</p>
<p>其中一位學長給我這篇文章<br>連結：<a href="https://www.ptt.cc/bbs/SENIORHIGH/M.1524292907.A.DF8.html?fbclid=IwAR2cTlpIx0m50SVHnyCnOnFaBxv6_EgukLO_hyDMSyGHiGPBlwUXvDL1Ftc">https://www.ptt.cc/bbs/SENIORHIGH/M.1524292907.A.DF8.html?fbclid=IwAR2cTlpIx0m50SVHnyCnOnFaBxv6_EgukLO_hyDMSyGHiGPBlwUXvDL1Ftc</a></p>
<p>其中一位學姊提供她的經驗<br>        我覺得照你說的你的條件是比我好的。<br>        我學測自然四科48 數學12 英文11 在校就普普 資訊競賽雖然看起來很多 但沒甚麼成績 資奧我那時候只有壓線拿到去考初選的資格而已。<br>        然後師大面試整體我覺得是比較輕鬆的 聽我同學說 一般組的還會有一些小測驗 類似海貍那種題目。<br>        但APCS完全沒有。<br>        那時候就是第一間進去有兩個教授 會問一些備審上面的問題然後叫你自介 但不是學術向問題 比較像是認識你那種。<br>        第二間就是跟教授聊聊天的感覺。</p>
<hr>
<p>5/7更新放榜結果：正取1</p>
<hr>
<h2 id="長庚資工-面試-4-18"><a href="#長庚資工-面試-4-18" class="headerlink" title="長庚資工(面試)(4/18)"></a>長庚資工(面試)(4/18)</h2><p>這是我的備審<br>連結 : <a href="https://drive.google.com/open?id=1rZ75w6ZeeY2U-0Ru0HKrMcKd3o95jggW">https://drive.google.com/open?id=1rZ75w6ZeeY2U-0Ru0HKrMcKd3o95jggW</a><br>備註我的學測成績(國11 數14 英14 自11)</p>
<p>面試時間大概10-12分鐘</p>
<p>教授：請各位大概用3-4分鐘自介<br>以下依序為教授問的題目</p>
<ol>
<li>程式語言是什麼？如果沒有程式人類會變得怎麼樣？(這題是搶答)</li>
<li>你學過哪些程式，如何1加到100？ (這題是教授想從左往右答)</li>
<li>有什麼問題想問教授？(最後只有我問)<br> 我：請問有沒有icpc競賽和校內培訓</li>
</ol>
<p>結論：<br>        我跟三個女的一起面試，可能是因為這樣，所以被問到的題目非常簡單(沒有性別歧視的意味，只是去年都問很多思考性的問題，但今年卻都是問題庫的題目，所以這只是我單方面的結論。)</p>
<hr>
<p>5/1附記：正取8</p>
<hr>
<h2 id="長庚電機-面試-4-25"><a href="#長庚電機-面試-4-25" class="headerlink" title="長庚電機 (面試)(4/25)"></a>長庚電機 (面試)(4/25)</h2><p>這是我的備審：<br>連結：<a href="https://drive.google.com/open?id=11AltvoSak_cOq5NRt_CxkRz1GMh5Ry6g">https://drive.google.com/open?id=11AltvoSak_cOq5NRt_CxkRz1GMh5Ry6g</a><br>備註我的學測成績(國11 數14 英14 自11)</p>
<p>（沒有自介）<br>有三間教室（各一個教授，有點像跑班的概念）<br>第一間教室（聊天教室）<br>就是問很多個人狀況，先問一些基本的資料，反正就是想認識你；想了解你有沒有在打程式；想知道你有沒有考APCS；想知道你有沒有在玩資訊相關的社團，人很友善。<br>第二間教室（專業題一題）<br>我被問到「電話是如何運作，並如何將聲音與訊號互相轉換？」<br>第三間教室（考英文聽說讀這三個）</p>
<ol>
<li>先看投影片上三句英文10秒，再用15秒內的時間念投影片上三句英文。</li>
<li>再來聽不到10秒的英文錄音檔。<br>（錄音檔聲音超模糊，但不用緊張，教授會一段一段跟你解釋）</li>
<li>5題選一題文章，看15秒，然後翻譯整篇。</li>
</ol>
<hr>
<p>5/1附記：正取25</p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>面試</tag>
        <tag>高中</tag>
      </tags>
  </entry>
  <entry>
    <title>程設(一) 作業1 有趣有用的小東西,心得</title>
    <url>/2020/10/09/%E7%A8%8B%E8%A8%AD(%E4%B8%80)%20%E4%BD%9C%E6%A5%AD1%20%E6%9C%89%E8%B6%A3%E6%9C%89%E7%94%A8%E7%9A%84%E5%B0%8F%E6%9D%B1%E8%A5%BF,%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<ol>
<li><strong>由於高中的資訊課從來都沒有L紀的課那麼<del>毒瘤</del>有趣，在寫功課中有感而發而寫了這篇有趣的小東西與大家分享，如果有各方大神有超毒瘤或有趣的玩法記得傳教我OwO</strong></li>
<li><strong>至於以後有遇到有趣的東東就會再寫，但功課解析不會再有（除非那題很毒瘤或有趣）</strong></li>
<li><strong>近期我會盡快架個Blog，有趣的東東都會放在Blog上，希望往後大家能多多造訪Orz</strong></li>
<li><strong>友情連結 -&gt;</strong> <a href="https://blog.jw910731.wtf/blog/">吳文元的Blog</a> <h2 id="先淺談一些有趣的東西"><a href="#先淺談一些有趣的東西" class="headerlink" title="先淺談一些有趣的東西"></a>先淺談一些有趣的東西</h2>為什麼我要先寫有趣的東西呢？因為大部分是寫功課過程中學到的，小部份只是想順道跟大家分享。</li>
</ol>
<blockquote>
<p>懶惰就都define起來啊OwO</p>
</blockquote>
<p>習慣打int的我，就</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int int32_t</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>C語言中沒有布林？（這篇是之前寫的，下一週上課剛好就被提到）</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>上課毒L紀說給你錯的輸入格式（？判掉它OAO</p>
</blockquote>
<p>我喜歡的寫法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> c;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%...&quot;</span>)!=...)<span class="comment">//&quot;...&quot;是指輸入多少量</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input correct format!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(c=getchar()!=<span class="string">&#x27;\n&#x27;</span> &amp;&amp; c!=EOF);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>sad之神吳文元喜歡的精簡寫法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%...&quot;</span>)!=...)<span class="comment">//&quot;...&quot;是指輸入多少量</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input correct format!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(getchar()!=<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>為什麼會有人main函式寫signed main() ?</p>
</blockquote>
<p><del>別問你會怕OwO</del><br>好啦，其實C99 ISO/IEC 9899:1999第99,100頁有規定到（如圖）<br><img src="https://i.imgur.com/yyx8gfb.png"></p>
<p>就像把<code>long long int</code>打成<code>long long</code>一樣啦，<strong>粗略來說</strong>就是名字不一樣但性質一樣。</p>
<p>用途就是有人跟我一樣毒瘤到懶的開<code>long long</code>時就<code>#define int long long</code>。</p>
<p>這時就要談到main為什麼只回傳int了 QAQ</p>
<p>又是很毒的C規定標準-&gt; ISO/IEC 9899:201x 第13頁的<a href="http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf">Program startup</a>有規定。</p>
<p>然後第14頁的<a href="http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf">Program termination</a>有講到<code>main()</code>回傳的<code>return</code>值會丟給<code>exit()</code>。</p>
<p>PS: <code>return</code>是調用堆疊（函數退出），<code>exit</code>是系統調用（進程退出）。</p>
<p>通常<code>return 0</code>是成功，<code>return 1</code><strong>可能</strong>表示失敗，回傳值丟給<code>exit()</code>後會告訴使用者</p>
<p><strong>exit(0)正常結束</strong>或<strong>exit(非0)產生錯誤資訊</strong>，有定義<a href="https://www.freebsd.org/cgi/man.cgi?query=sysexits&apropos=0&sektion=0&manpath=FreeBSD+4.3-RELEASE&format=html">system exit</a>回傳數字是什麼意思。</p>
<p><strong>上面看不懂沒關係，因為總結起來如下面程式碼一樣簡單又簡潔OwO(<del>文元不要打我</del>)</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<blockquote>
<p>你不知道為什麼scanf編譯時吃了warning?</p>
</blockquote>
<p><img src="https://i.imgur.com/S3q1XnO.png"></p>
<p>其實scanf是會回傳值的，只是單純警告你忽略了回傳值（就像宣告了一個變數，但整個程式都沒用到它，就會給你一個warning提醒使用者），在這點到為止，有興趣的看<a href="https://stackoverflow.com/questions/10043841/c-error-ignoring-return-value-of-scanf">這裡</a>，-Wunused-result看<a href="https://stackoverflow.com/questions/40576003/ignoring-warning-wunused-result">這裡</a>。</p>
<blockquote>
<p>題目要求連續輸入直到EOF時(End of File)(ctrl+z是Windows的EOF)(ctrl+d是Linux的EOF)</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//正常寫法</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n)!=EOF)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//毒瘤寫法（黑魔法）</span></span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n))&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>好啦，其實不是黑魔法，’~’符號只是位元運算子的「not」</p>
<p>舉例 a=101001 ; b=~a ; 那麼 b=010110 (not的這個想法在hw0105的手寫部份可以用的上OwO)</p>
<p>通常EOF是系統跑到文件結尾時，所回傳的信號（-1）</p>
<ul>
<li><strong>因系統而異，不全是-1</strong></li>
</ul>
<p>然後在上面那一篇有說到scanf是會回傳值的，它回傳了EOF(-1)，並將(-1)給not</p>
<p>因此，以8位元二補數舉例表示為： ~(-1) = ~(1111 1111)(二進位) = (0000 0000)(二進位)= 0 (十進位)</p>
<p>那麼，while(~(-1)) = while(0) </p>
<ul>
<li><p><strong>提醒 : ASCII沒有負數(0~127)，因此EOF不是特殊字符。</strong></p>
</li>
<li><p><strong>EOF是被define的 -&gt; <code>#define EOF -1</code></strong></p>
</li>
</ul>
<blockquote>
<p>當你很想輸出後就直接<code>return 0</code>時(1行超讚)</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d&quot;</span>,a,b,a+b),<span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="防雷線-以下是作業部份"><a href="#防雷線-以下是作業部份" class="headerlink" title="防雷線(以下是作業部份)"></a>防雷線(以下是作業部份)</h2><hr>
<h2 id=""><a href="#" class="headerlink" title=""></a><hw0101></h2><p>簡單的輸出題。</p>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a><hw0102></h2><p>題目規定要5 digits，所以要判斷是否有輸入錯格式。<br>再來把輸入的數字丟進for裡，每次除以一個從10000開始每次除以10的數字，一直乘進答案裡，輸入的數字記得模掉最前面一位。</p>
<h2 id="-2"><a href="#-2" class="headerlink" title=""></a><hw0103></h2><p>物理算術題。</p>
<p>下面第21行的<code>%.2f</code> , <code>%.3f</code><strong>極粗略上來說</strong>是取四捨五入當第多少位，如果不足位數則補0，如果需要實做輔助看<a href="https://blog.csdn.net/wonglong01/article/details/6074887">這裡</a>。</p>
<h2 id="-3"><a href="#-3" class="headerlink" title=""></a><hw0104></h2><p>我先使用 <code>whereis stdio.h</code> 尋找 stdio.h 的 path，跟著路徑<code>/usr/include/</code>找到stdio.h後將它mv成不同名字（<code>sudo mv stdio.h stdioo.h</code>）(沒加sudo會permission denied，所以提高權限)，改完後回去直接<code>$ make clean</code> <code>$ make</code>會得到”fatal error”，不能過編。但是，如果我把程式裡的<code>#include&lt;stdio.h&gt;</code>砍掉就「可以過編」，但會吃warning，原因在於<code>[-Wimplicit-function-declaration]</code>(隱式宣告函式)也就是C語言有規定，<strong>「對於沒有宣告的函式，自動使用隱式宣告」</strong>。</p>
<p><img src="https://i.imgur.com/oHga5aJ.jpg"></p>
<h2 id="-4"><a href="#-4" class="headerlink" title=""></a><hw0105></h2><h3 id="解釋10進位負數轉16進位"><a href="#解釋10進位負數轉16進位" class="headerlink" title="解釋10進位負數轉16進位"></a>解釋10進位負數轉16進位</h3><p>首先將此十進位數字部份轉成二進位，反碼後加1，4個數字一組轉成16進位（共8組）($2^{4*8}$)。</p>
<p>或是可以參考<a href="https://www.itread01.com/content/1543721235.html">這裡</a>。</p>
<h2 id="Bonus"><a href="#Bonus" class="headerlink" title="Bonus "></a>Bonus <hw0106></h2><p>我先使用<code>whereis cd</code>尋找cd，之後又用<code>ls /bin | grep cd</code>也找不到，於是詢問一下他的type是什麼<code>type cd</code>，出現了以下我簡化後的敘述。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd is a function with definition</span><br><span class="line">#Defined in &#x2F;usr&#x2F;share&#x2F;fish&#x2F;functions&#x2F;cd.fish</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>在fish-shell，cd是個function（因為我的是fish-shell）。<br>但如果要查bash，那<code>echo &quot;type cd&quot; | bash</code>或<code>echo &quot;type cd&quot; | sh</code>它會超貼心的說<code>cd is a shell builtin</code>。</p>
<p>PS: 讚嘆余原齊大神只用<code>which cd</code>揍掉這題m(_ _)m</p>
]]></content>
      <categories>
        <category>心得</category>
      </categories>
      <tags>
        <tag>作業</tag>
        <tag>有趣的東西</tag>
      </tags>
  </entry>
</search>
